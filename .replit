modules = ["nodejs-20", "bash", "web", "postgresql-16"]
run = "npm run dev"
hidden = [".config", ".git", "generated-icon.png", "node_modules", "dist"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "autoscale"
run = ["sh", "-c", "node dist/index.js"]
build = ["sh", "-c", "npm run build"]

[[ports]]
localPort = 3000
externalPort = 3000

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5001
externalPort = 3001

[workflows]

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Start application"

[[workflows.workflow]]
name = "Start application"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"
waitForPort = 5000

[[workflows.workflow]]
name = "Start Dev Server"
author = 37567996
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx server/index.ts"

[[workflows.workflow]]
name = "Documentation Automation"
author = 37567996
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "tsx server/utils/doc-automation.ts"

[[workflows.workflow]]
name = "Documentation Watch"
author = 37567996
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "tsx server/utils/doc-automation.ts --watch"

[[workflows.workflow]]
name = "Seed Sample Data"
author = 37567996
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx server/clear-all.ts"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx server/seed-from-concerts-api.ts"
